(defwidget launcher []
  (button :class "launcherbox"
    ; Server needs to be running! Otherwise times out
    ; nwg-drawer -r -wm niri msg action spawn --
    :onclick "nwg-drawer"
    ""
  )
)

(defwidget left []
  (box :class "left"
    :orientation "h"
    :space-evenly false
    :halign "start"
    (launcher)
  )
)

(defwidget bardate []
  (box :class "bardatebox"
    :orientation "h"
    :space-evenly true
    (button :onclick "eww -c ~/.config/eww open --toggle date" date)
  )
)

(defwidget center []
  (box :class "left"
    :orientation "h"
    :space-evenly false
    :halign "center"
    :valign "center"
    (bardate)
  )
)

(defwidget powerbutton []
  (button :class "powerbutton"
    :onclick "eww -c ~/.config/eww open-many --toggle powermenu-clickhandler powermenu"
    "󰤆"
  )
)

(defwidget actionsbox []
  (button :class "actionsbox" :onclick "eww -c ~/.config/eww open --toggle actions"
    (box :orientation "h"
      :space-evenly true
      :spacing 20
      (label :text "${network_icon}")
      (label :text "${volume_icon}")
      (label :text "${bluetooth_state == 'on' ? '' : ''}")
      (label :text "${mic_status == 'no' ? '' : ''}") ; doesn't select default sink
    )
  )
)

(defwidget right []
  (box :class "left"
    :orientation "h"
    :space-evenly false
    :halign "end"
    (actionsbox)
    (powerbutton)
  )
)

(defwidget bar []
  (box :class "bar"
    :orientation "h"
    :space-evenly true
    (left)
    (center)
    (right)
  )
)

(defwindow bar
  :monitor 1
  :geometry (geometry :x "0px"
    :y "0px"
    :width "100%"
    :height "4%"
  :anchor "center top")
  :type "dock"
  :exclusive true
  (bar))
